{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Jook\\\\reactprojects\\\\reactmovieapp\\\\movieapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _objectSpread from\"C:\\\\Users\\\\Jook\\\\reactprojects\\\\reactmovieapp\\\\movieapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"C:\\\\Users\\\\Jook\\\\reactprojects\\\\reactmovieapp\\\\movieapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\Jook\\\\reactprojects\\\\reactmovieapp\\\\movieapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{useState,useEffect,useCallback}from\"react\";import{API_URL,API_KEY}from\"../../config\";export var useMovieFetch=function useMovieFetch(movieId){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];var fetchData=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var endpoint,result,creditsEndpoint,creditsResult,directors;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// voordat je de data ophaalt\nsetError(false);setLoading(true);// ophalen van de gegevens in een try {} catch(error) {} block\n_context.prev=2;//ophalen van de movie gegevens obv movieId\nendpoint=\"\".concat(API_URL,\"movie/\").concat(movieId,\"?api_key=\").concat(API_KEY);_context.next=6;return fetch(endpoint);case 6:_context.next=8;return _context.sent.json();case 8:result=_context.sent;//ophalen van de credits gegevens obv movieId\ncreditsEndpoint=\"\".concat(API_URL,\"movie/\").concat(movieId,\"/credits?api_key=\").concat(API_KEY);_context.next=12;return fetch(creditsEndpoint);case 12:_context.next=14;return _context.sent.json();case 14:creditsResult=_context.sent;// filter de uit de creditsgegeven / crew de job van director\ndirectors=creditsResult.crew.filter(function(member){return member.job===\"Director\";});// wijzig de state dmv Setstate\nsetState(_objectSpread(_objectSpread({},result),{},{actors:creditsResult.cast,directors:directors}));_context.next=22;break;case 19:_context.prev=19;_context.t0=_context[\"catch\"](2);setError(true);case 22:// nadat je de gegevens hebt opgehaald\nsetLoading(false);case 23:case\"end\":return _context.stop();}}},_callee,null,[[2,19]]);})),// gegevens alleen ophalen als de movieId verandert\n[movieId]);// uitvoeren van de functie fetchData\nuseEffect(function(){if(localStorage[movieId]){setState(JSON.parse(localStorage[movieId]));setLoading(false);}else{fetchData();}},[fetchData,movieId]);// data opslaan local storage\nuseEffect(function(){localStorage.setItem(movieId,JSON.stringify(state));},[movieId,state]);//teruggeven van de data\nreturn[state,loading,error];};","map":{"version":3,"sources":["C:/Users/Jook/reactprojects/reactmovieapp/movieapp/src/components/hooks/useMovieFetch.js"],"names":["useState","useEffect","useCallback","API_URL","API_KEY","useMovieFetch","movieId","state","setState","loading","setLoading","error","setError","fetchData","endpoint","fetch","json","result","creditsEndpoint","creditsResult","directors","crew","filter","member","job","actors","cast","localStorage","JSON","parse","setItem","stringify"],"mappings":"wsBAAA,OAASA,QAAT,CAAmBC,SAAnB,CAA8BC,WAA9B,KAAiD,OAAjD,CACA,OAASC,OAAT,CAAkBC,OAAlB,KAAiC,cAAjC,CAEA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,OAAD,CAAa,eACdN,QAAQ,CAAC,EAAD,CADM,wCACjCO,KADiC,eAC1BC,QAD0B,8BAEVR,QAAQ,CAAC,IAAD,CAFE,yCAEjCS,OAFiC,eAExBC,UAFwB,8BAGdV,QAAQ,CAAC,KAAD,CAHM,yCAGjCW,KAHiC,eAG1BC,QAH0B,eAKxC,GAAMC,CAAAA,SAAS,CAAGX,WAAW,sEAC3B,+LACE;AACAU,QAAQ,CAAC,KAAD,CAAR,CACAF,UAAU,CAAC,IAAD,CAAV,CAEA;AALF,gBAOI;AACMI,QARV,WAQwBX,OARxB,kBAQwCG,OARxC,qBAQ2DF,OAR3D,wBASgCW,CAAAA,KAAK,CAACD,QAAD,CATrC,6CASiDE,IATjD,UASUC,MATV,eAWI;AACMC,eAZV,WAY+Bf,OAZ/B,kBAY+CG,OAZ/C,6BAY0EF,OAZ1E,yBAauCW,CAAAA,KAAK,CAACG,eAAD,CAb5C,+CAa+DF,IAb/D,WAaUG,aAbV,eAcI;AACMC,SAfV,CAesBD,aAAa,CAACE,IAAd,CAAmBC,MAAnB,CAChB,SAACC,MAAD,QAAYA,CAAAA,MAAM,CAACC,GAAP,GAAe,UAA3B,EADgB,CAftB,CAmBI;AACAhB,QAAQ,gCACHS,MADG,MAENQ,MAAM,CAAEN,aAAa,CAACO,IAFhB,CAGNN,SAAS,CAATA,SAHM,GAAR,CApBJ,iFA0BIR,QAAQ,CAAC,IAAD,CAAR,CA1BJ,QA4BE;AACAF,UAAU,CAAC,KAAD,CAAV,CA7BF,qEAD2B,GAgC3B;AACA,CAACJ,OAAD,CAjC2B,CAA7B,CAoCA;AACAL,SAAS,CAAC,UAAM,CACd,GAAI0B,YAAY,CAACrB,OAAD,CAAhB,CAA2B,CACzBE,QAAQ,CAACoB,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACrB,OAAD,CAAvB,CAAD,CAAR,CACAI,UAAU,CAAC,KAAD,CAAV,CACD,CAHD,IAGO,CACLG,SAAS,GACV,CACF,CAPQ,CAON,CAACA,SAAD,CAAYP,OAAZ,CAPM,CAAT,CASA;AACAL,SAAS,CAAC,UAAM,CACd0B,YAAY,CAACG,OAAb,CAAqBxB,OAArB,CAA8BsB,IAAI,CAACG,SAAL,CAAexB,KAAf,CAA9B,EACD,CAFQ,CAEN,CAACD,OAAD,CAAUC,KAAV,CAFM,CAAT,CAIA;AACA,MAAO,CAACA,KAAD,CAAQE,OAAR,CAAiBE,KAAjB,CAAP,CACD,CA1DM","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\r\nimport { API_URL, API_KEY } from \"../../config\";\r\n\r\nexport const useMovieFetch = (movieId) => {\r\n  const [state, setState] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n\r\n  const fetchData = useCallback(\r\n    async () => {\r\n      // voordat je de data ophaalt\r\n      setError(false);\r\n      setLoading(true);\r\n\r\n      // ophalen van de gegevens in een try {} catch(error) {} block\r\n      try {\r\n        //ophalen van de movie gegevens obv movieId\r\n        const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\r\n        const result = await (await fetch(endpoint)).json();\r\n\r\n        //ophalen van de credits gegevens obv movieId\r\n        const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\r\n        const creditsResult = await (await fetch(creditsEndpoint)).json();\r\n        // filter de uit de creditsgegeven / crew de job van director\r\n        const directors = creditsResult.crew.filter(\r\n          (member) => member.job === \"Director\"\r\n        );\r\n\r\n        // wijzig de state dmv Setstate\r\n        setState({\r\n          ...result,\r\n          actors: creditsResult.cast,\r\n          directors,\r\n        });\r\n      } catch (error) {\r\n        setError(true);\r\n      }\r\n      // nadat je de gegevens hebt opgehaald\r\n      setLoading(false);\r\n    },\r\n    // gegevens alleen ophalen als de movieId verandert\r\n    [movieId]\r\n  );\r\n\r\n  // uitvoeren van de functie fetchData\r\n  useEffect(() => {\r\n    if (localStorage[movieId]) {\r\n      setState(JSON.parse(localStorage[movieId]));\r\n      setLoading(false);\r\n    } else {\r\n      fetchData();\r\n    }\r\n  }, [fetchData, movieId]);\r\n\r\n  // data opslaan local storage\r\n  useEffect(() => {\r\n    localStorage.setItem(movieId, JSON.stringify(state));\r\n  }, [movieId, state]);\r\n\r\n  //teruggeven van de data\r\n  return [state, loading, error];\r\n};\r\n"]},"metadata":{},"sourceType":"module"}