{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport { API_URL, API_KEY } from \"../../config\";\nexport const useHomeFetch = () => {\n  const [state, setState] = useState({\n    movies: []\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const fetchMovies = async endpoint => {\n    setError(false);\n    setLoading(true);\n\n    try {\n      const result = await (await fetch(endpoint)).json();\n      setState(prev => ({ ...prev,\n        movies: [...result.results],\n        heroImage: prev.heroImage || result.results[0],\n        currentPage: result.page,\n        totalPages: result.total_pages\n      }));\n    } catch (error) {\n      setError(true);\n      console.log(error);\n    }\n\n    setLoading(false);\n  }; // Fetch popular movies initially on mount\n\n\n  useEffect(() => {\n    fetchMovies(`${API_URL}movie/popular?api_key=${API_KEY}`);\n  }, []);\n  return [{\n    state,\n    loading,\n    error\n  }, fetchMovies];\n};","map":{"version":3,"sources":["C:/Users/Jook/reactprojects/reactmovieapp/movieapp/src/components/hooks/useHomeFetch.js"],"names":["useState","useEffect","API_URL","API_KEY","useHomeFetch","state","setState","movies","loading","setLoading","error","setError","fetchMovies","endpoint","result","fetch","json","prev","results","heroImage","currentPage","page","totalPages","total_pages","console","log"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,cAAjC;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAChC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC;AAAEO,IAAAA,MAAM,EAAE;AAAV,GAAD,CAAlC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAMY,WAAW,GAAG,MAAOC,QAAP,IAAoB;AACtCF,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAF,IAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,QAAI;AACF,YAAMK,MAAM,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACF,QAAD,CAAZ,EAAwBG,IAAxB,EAArB;AACAV,MAAAA,QAAQ,CAAEW,IAAD,KAAW,EAClB,GAAGA,IADe;AAElBV,QAAAA,MAAM,EAAE,CAAC,GAAGO,MAAM,CAACI,OAAX,CAFU;AAGlBC,QAAAA,SAAS,EAAEF,IAAI,CAACE,SAAL,IAAkBL,MAAM,CAACI,OAAP,CAAe,CAAf,CAHX;AAIlBE,QAAAA,WAAW,EAAEN,MAAM,CAACO,IAJF;AAKlBC,QAAAA,UAAU,EAAER,MAAM,CAACS;AALD,OAAX,CAAD,CAAR;AAOD,KATD,CASE,OAAOb,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;AACD;;AACDD,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAlBD,CALgC,CAyBhC;;;AACAR,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,WAAW,CAAE,GAAEV,OAAQ,yBAAwBC,OAAQ,EAA5C,CAAX;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO,CAAC;AAAEE,IAAAA,KAAF;AAASG,IAAAA,OAAT;AAAkBE,IAAAA;AAAlB,GAAD,EAA4BE,WAA5B,CAAP;AACD,CA/BM","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { API_URL, API_KEY } from \"../../config\";\r\n\r\nexport const useHomeFetch = () => {\r\n  const [state, setState] = useState({ movies: [] });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  const fetchMovies = async (endpoint) => {\r\n    setError(false);\r\n    setLoading(true);\r\n\r\n    try {\r\n      const result = await (await fetch(endpoint)).json();\r\n      setState((prev) => ({\r\n        ...prev,\r\n        movies: [...result.results],\r\n        heroImage: prev.heroImage || result.results[0],\r\n        currentPage: result.page,\r\n        totalPages: result.total_pages,\r\n      }));\r\n    } catch (error) {\r\n      setError(true);\r\n      console.log(error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  // Fetch popular movies initially on mount\r\n  useEffect(() => {\r\n    fetchMovies(`${API_URL}movie/popular?api_key=${API_KEY}`);\r\n  }, []);\r\n\r\n  return [{ state, loading, error }, fetchMovies];\r\n};\r\n"]},"metadata":{},"sourceType":"module"}